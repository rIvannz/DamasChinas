//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DamasChinas_Client.UI.LobbyServiceProxy {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Lobby", Namespace="http://schemas.datacontract.org/2004/07/Damas_Chinas_Server.Dtos")]
    [System.SerializableAttribute()]
    public partial class Lobby : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HostUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPrivateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DamasChinas_Client.UI.LobbyServiceProxy.LobbyMember[] MembersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedAt {
            get {
                return this.CreatedAtField;
            }
            set {
                if ((this.CreatedAtField.Equals(value) != true)) {
                    this.CreatedAtField = value;
                    this.RaisePropertyChanged("CreatedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HostUserId {
            get {
                return this.HostUserIdField;
            }
            set {
                if ((this.HostUserIdField.Equals(value) != true)) {
                    this.HostUserIdField = value;
                    this.RaisePropertyChanged("HostUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPrivate {
            get {
                return this.IsPrivateField;
            }
            set {
                if ((this.IsPrivateField.Equals(value) != true)) {
                    this.IsPrivateField = value;
                    this.RaisePropertyChanged("IsPrivate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DamasChinas_Client.UI.LobbyServiceProxy.LobbyMember[] Members {
            get {
                return this.MembersField;
            }
            set {
                if ((object.ReferenceEquals(this.MembersField, value) != true)) {
                    this.MembersField = value;
                    this.RaisePropertyChanged("Members");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LobbyMember", Namespace="http://schemas.datacontract.org/2004/07/Damas_Chinas_Server.Dtos")]
    [System.SerializableAttribute()]
    public partial class LobbyMember : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsHostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsHost {
            get {
                return this.IsHostField;
            }
            set {
                if ((this.IsHostField.Equals(value) != true)) {
                    this.IsHostField = value;
                    this.RaisePropertyChanged("IsHost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LobbyServiceProxy.ILobbyService", CallbackContract=typeof(DamasChinas_Client.UI.LobbyServiceProxy.ILobbyServiceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface ILobbyService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyService/CreateLobby", ReplyAction="http://tempuri.org/ILobbyService/CreateLobbyResponse")]
        DamasChinas_Client.UI.LobbyServiceProxy.Lobby CreateLobby(int hostUserId, string hostUsername, bool isPrivate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyService/CreateLobby", ReplyAction="http://tempuri.org/ILobbyService/CreateLobbyResponse")]
        System.Threading.Tasks.Task<DamasChinas_Client.UI.LobbyServiceProxy.Lobby> CreateLobbyAsync(int hostUserId, string hostUsername, bool isPrivate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyService/JoinLobby", ReplyAction="http://tempuri.org/ILobbyService/JoinLobbyResponse")]
        DamasChinas_Client.UI.LobbyServiceProxy.Lobby JoinLobby(string code, int userId, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyService/JoinLobby", ReplyAction="http://tempuri.org/ILobbyService/JoinLobbyResponse")]
        System.Threading.Tasks.Task<DamasChinas_Client.UI.LobbyServiceProxy.Lobby> JoinLobbyAsync(string code, int userId, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyService/LeaveLobby", ReplyAction="http://tempuri.org/ILobbyService/LeaveLobbyResponse")]
        bool LeaveLobby(string code, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyService/LeaveLobby", ReplyAction="http://tempuri.org/ILobbyService/LeaveLobbyResponse")]
        System.Threading.Tasks.Task<bool> LeaveLobbyAsync(string code, int userId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyService/SendLobbyMessage")]
        void SendLobbyMessage(string code, int userId, string username, string message);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyService/SendLobbyMessage")]
        System.Threading.Tasks.Task SendLobbyMessageAsync(string code, int userId, string username, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyService/GetLobby", ReplyAction="http://tempuri.org/ILobbyService/GetLobbyResponse")]
        DamasChinas_Client.UI.LobbyServiceProxy.Lobby GetLobby(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyService/GetLobby", ReplyAction="http://tempuri.org/ILobbyService/GetLobbyResponse")]
        System.Threading.Tasks.Task<DamasChinas_Client.UI.LobbyServiceProxy.Lobby> GetLobbyAsync(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyService/KickMember", ReplyAction="http://tempuri.org/ILobbyService/KickMemberResponse")]
        bool KickMember(string code, int targetUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyService/KickMember", ReplyAction="http://tempuri.org/ILobbyService/KickMemberResponse")]
        System.Threading.Tasks.Task<bool> KickMemberAsync(string code, int targetUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyService/StartGame", ReplyAction="http://tempuri.org/ILobbyService/StartGameResponse")]
        bool StartGame(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyService/StartGame", ReplyAction="http://tempuri.org/ILobbyService/StartGameResponse")]
        System.Threading.Tasks.Task<bool> StartGameAsync(string code);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILobbyServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyService/OnMemberJoined")]
        void OnMemberJoined(DamasChinas_Client.UI.LobbyServiceProxy.LobbyMember member);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyService/OnMemberLeft")]
        void OnMemberLeft(int userId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyService/OnMessageReceived")]
        void OnMessageReceived(int userId, string username, string message, string utcIso);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyService/OnLobbyClosed")]
        void OnLobbyClosed(string reason);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyService/OnGameStarted")]
        void OnGameStarted(string code);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILobbyServiceChannel : DamasChinas_Client.UI.LobbyServiceProxy.ILobbyService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LobbyServiceClient : System.ServiceModel.DuplexClientBase<DamasChinas_Client.UI.LobbyServiceProxy.ILobbyService>, DamasChinas_Client.UI.LobbyServiceProxy.ILobbyService {
        
        public LobbyServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public LobbyServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public LobbyServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public LobbyServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public LobbyServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public DamasChinas_Client.UI.LobbyServiceProxy.Lobby CreateLobby(int hostUserId, string hostUsername, bool isPrivate) {
            return base.Channel.CreateLobby(hostUserId, hostUsername, isPrivate);
        }
        
        public System.Threading.Tasks.Task<DamasChinas_Client.UI.LobbyServiceProxy.Lobby> CreateLobbyAsync(int hostUserId, string hostUsername, bool isPrivate) {
            return base.Channel.CreateLobbyAsync(hostUserId, hostUsername, isPrivate);
        }
        
        public DamasChinas_Client.UI.LobbyServiceProxy.Lobby JoinLobby(string code, int userId, string username) {
            return base.Channel.JoinLobby(code, userId, username);
        }
        
        public System.Threading.Tasks.Task<DamasChinas_Client.UI.LobbyServiceProxy.Lobby> JoinLobbyAsync(string code, int userId, string username) {
            return base.Channel.JoinLobbyAsync(code, userId, username);
        }
        
        public bool LeaveLobby(string code, int userId) {
            return base.Channel.LeaveLobby(code, userId);
        }
        
        public System.Threading.Tasks.Task<bool> LeaveLobbyAsync(string code, int userId) {
            return base.Channel.LeaveLobbyAsync(code, userId);
        }
        
        public void SendLobbyMessage(string code, int userId, string username, string message) {
            base.Channel.SendLobbyMessage(code, userId, username, message);
        }
        
        public System.Threading.Tasks.Task SendLobbyMessageAsync(string code, int userId, string username, string message) {
            return base.Channel.SendLobbyMessageAsync(code, userId, username, message);
        }
        
        public DamasChinas_Client.UI.LobbyServiceProxy.Lobby GetLobby(string code) {
            return base.Channel.GetLobby(code);
        }
        
        public System.Threading.Tasks.Task<DamasChinas_Client.UI.LobbyServiceProxy.Lobby> GetLobbyAsync(string code) {
            return base.Channel.GetLobbyAsync(code);
        }
        
        public bool KickMember(string code, int targetUserId) {
            return base.Channel.KickMember(code, targetUserId);
        }
        
        public System.Threading.Tasks.Task<bool> KickMemberAsync(string code, int targetUserId) {
            return base.Channel.KickMemberAsync(code, targetUserId);
        }
        
        public bool StartGame(string code) {
            return base.Channel.StartGame(code);
        }
        
        public System.Threading.Tasks.Task<bool> StartGameAsync(string code) {
            return base.Channel.StartGameAsync(code);
        }
    }
}
